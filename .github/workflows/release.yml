name: Release

on:
  # release:
  #   types: [published]
  workflow_dispatch:
    inputs:
      # jsr:
      #   description: "Publish to JSR"
      #   type: boolean
      #   default: false
      npm:
        description: "Publish to NPM"
        type: boolean
        default: true
      # pkg:
      #   description: "Package name"
      #   required: true
      #   type: choice
      #   options:
      #     - cli
      #     - core
      #     - alfarouk
      tag:
        description: "NPM tag"
        default: "latest"
        type: choice
        options:
          - latest
          - next

# run-name: >
#   ${{ github.event_name == 'workflow_dispatch'
#   && format('Publish {0} on {1}{2}', inputs.pkg, inputs.jsr && 'JSR ' || '', inputs.npm && 'NPM' || '')
#   || github.workflow }}

jobs:
  npm-release:
    if: ${{ github.event_name == 'release' || inputs.npm }}
    env:
      TAG: ${{ github.event.release.prerelease || (inputs.tag == 'next') && 'next' || 'latest' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Remove GitHub alerts from README.md for NPM/JSR
        run: sed -i -r '/^>\s+\[!\w+\]/d' ./README.md
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
          registry-url: "https://registry.npmjs.org/"
          scope: "@medrivia"
      - run: bun i # install
      - run: bun --if-present g # generate
      - run: bun --if-present b # build
      - name: "Use data from publishConfig"
        run: |
          jq \
          'reduce .publishConfig as $in (.; . + $in) | del(.publishConfig)' \
          package.json > package.json~
          mv package.json~ package.json
      - uses: actions/setup-node@v4
        with:
          node-version: latest
          registry-url: "https://registry.npmjs.org/"
          scope: "@medrivia"
      - name: "Publish to NPM"
        run: npm publish --provenance --access public --tag $TAG
        env:
          NPM_CONFIG_TOKEN: ${{secrets.NPM_TOKEN}}
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
